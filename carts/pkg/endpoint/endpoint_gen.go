// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "gokit/ecommerse/carts/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	AddToCartEndpoint      endpoint.Endpoint
	GetFromAllEndpoint     endpoint.Endpoint
	UpdateInCartEndpoint   endpoint.Endpoint
	DeleteFromCartEndpoint endpoint.Endpoint
	GetFromCartEndpoint    endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.CartsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AddToCartEndpoint:      MakeAddToCartEndpoint(s),
		DeleteFromCartEndpoint: MakeDeleteFromCartEndpoint(s),
		GetFromAllEndpoint:     MakeGetFromAllEndpoint(s),
		GetFromCartEndpoint:    MakeGetFromCartEndpoint(s),
		UpdateInCartEndpoint:   MakeUpdateInCartEndpoint(s),
	}
	for _, m := range mdw["AddToCart"] {
		eps.AddToCartEndpoint = m(eps.AddToCartEndpoint)
	}
	for _, m := range mdw["GetFromAll"] {
		eps.GetFromAllEndpoint = m(eps.GetFromAllEndpoint)
	}
	for _, m := range mdw["UpdateInCart"] {
		eps.UpdateInCartEndpoint = m(eps.UpdateInCartEndpoint)
	}
	for _, m := range mdw["DeleteFromCart"] {
		eps.DeleteFromCartEndpoint = m(eps.DeleteFromCartEndpoint)
	}
	for _, m := range mdw["GetFromCart"] {
		eps.GetFromCartEndpoint = m(eps.GetFromCartEndpoint)
	}
	return eps
}
