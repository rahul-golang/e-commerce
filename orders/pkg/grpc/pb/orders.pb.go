// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	OrdersID                  uint64               `protobuf:"varint,1,opt,name=OrdersID,proto3" json:"OrdersID,omitempty"`
	TotalTax                  int64                `protobuf:"varint,2,opt,name=TotalTax,proto3" json:"TotalTax,omitempty"`
	CustomersID               uint64               `protobuf:"varint,3,opt,name=CustomersID,proto3" json:"CustomersID,omitempty"`
	CustomersName             string               `protobuf:"bytes,4,opt,name=CustomersName,proto3" json:"CustomersName,omitempty"`
	CustomersCompany          string               `protobuf:"bytes,5,opt,name=CustomersCompany,proto3" json:"CustomersCompany,omitempty"`
	CustomersStreetAddress    string               `protobuf:"bytes,6,opt,name=CustomersStreetAddress,proto3" json:"CustomersStreetAddress,omitempty"`
	CustomersSuburb           string               `protobuf:"bytes,7,opt,name=CustomersSuburb,proto3" json:"CustomersSuburb,omitempty"`
	CustomersCity             string               `protobuf:"bytes,8,opt,name=CustomersCity,proto3" json:"CustomersCity,omitempty"`
	CustomersPostCode         string               `protobuf:"bytes,9,opt,name=CustomersPostCode,proto3" json:"CustomersPostCode,omitempty"`
	CustomersState            string               `protobuf:"bytes,10,opt,name=CustomersState,proto3" json:"CustomersState,omitempty"`
	CustomersCountry          string               `protobuf:"bytes,11,opt,name=CustomersCountry,proto3" json:"CustomersCountry,omitempty"`
	CustomersTelephone        string               `protobuf:"bytes,12,opt,name=CustomersTelephone,proto3" json:"CustomersTelephone,omitempty"`
	Email                     string               `protobuf:"bytes,13,opt,name=Email,proto3" json:"Email,omitempty"`
	CustomersAddressFormatID  string               `protobuf:"bytes,14,opt,name=CustomersAddressFormatID,proto3" json:"CustomersAddressFormatID,omitempty"`
	DeliveryName              string               `protobuf:"bytes,15,opt,name=DeliveryName,proto3" json:"DeliveryName,omitempty"`
	DeliveryCompany           string               `protobuf:"bytes,16,opt,name=DeliveryCompany,proto3" json:"DeliveryCompany,omitempty"`
	DeliveryStreetAddress     string               `protobuf:"bytes,17,opt,name=DeliveryStreetAddress,proto3" json:"DeliveryStreetAddress,omitempty"`
	DeliverySuburb            string               `protobuf:"bytes,18,opt,name=DeliverySuburb,proto3" json:"DeliverySuburb,omitempty"`
	DeliveryCity              string               `protobuf:"bytes,19,opt,name=DeliveryCity,proto3" json:"DeliveryCity,omitempty"`
	DeliveryPostcode          string               `protobuf:"bytes,20,opt,name=DeliveryPostcode,proto3" json:"DeliveryPostcode,omitempty"`
	DeliveryState             string               `protobuf:"bytes,21,opt,name=DeliveryState,proto3" json:"DeliveryState,omitempty"`
	DeliveryCountry           string               `protobuf:"bytes,22,opt,name=DeliveryCountry,proto3" json:"DeliveryCountry,omitempty"`
	DeliveryAddressFormatID   uint64               `protobuf:"varint,23,opt,name=DeliveryAddressFormatID,proto3" json:"DeliveryAddressFormatID,omitempty"`
	BillingName               string               `protobuf:"bytes,24,opt,name=BillingName,proto3" json:"BillingName,omitempty"`
	BillingCompany            string               `protobuf:"bytes,25,opt,name=BillingCompany,proto3" json:"BillingCompany,omitempty"`
	BillingStreetAddress      string               `protobuf:"bytes,26,opt,name=BillingStreetAddress,proto3" json:"BillingStreetAddress,omitempty"`
	BillingSuburb             string               `protobuf:"bytes,27,opt,name=BillingSuburb,proto3" json:"BillingSuburb,omitempty"`
	BillingCity               string               `protobuf:"bytes,28,opt,name=BillingCity,proto3" json:"BillingCity,omitempty"`
	BillingPostCode           string               `protobuf:"bytes,29,opt,name=BillingPostCode,proto3" json:"BillingPostCode,omitempty"`
	BillingState              string               `protobuf:"bytes,30,opt,name=BillingState,proto3" json:"BillingState,omitempty"`
	BillingCountry            string               `protobuf:"bytes,31,opt,name=BillingCountry,proto3" json:"BillingCountry,omitempty"`
	BillingAddresFormatID     uint64               `protobuf:"varint,32,opt,name=BillingAddresFormatID,proto3" json:"BillingAddresFormatID,omitempty"`
	PaymentMethod             string               `protobuf:"bytes,33,opt,name=PaymentMethod,proto3" json:"PaymentMethod,omitempty"`
	CcType                    string               `protobuf:"bytes,34,opt,name=CcType,proto3" json:"CcType,omitempty"`
	CcOwner                   string               `protobuf:"bytes,35,opt,name=CcOwner,proto3" json:"CcOwner,omitempty"`
	CcNumber                  string               `protobuf:"bytes,36,opt,name=CcNumber,proto3" json:"CcNumber,omitempty"`
	CcExpires                 string               `protobuf:"bytes,37,opt,name=CcExpires,proto3" json:"CcExpires,omitempty"`
	LastModified              *timestamp.Timestamp `protobuf:"bytes,38,opt,name=LastModified,proto3" json:"LastModified,omitempty"`
	DatePurchased             *timestamp.Timestamp `protobuf:"bytes,39,opt,name=DatePurchased,proto3" json:"DatePurchased,omitempty"`
	OrdersDateFinished        *timestamp.Timestamp `protobuf:"bytes,40,opt,name=OrdersDateFinished,proto3" json:"OrdersDateFinished,omitempty"`
	Currency                  string               `protobuf:"bytes,41,opt,name=Currency,proto3" json:"Currency,omitempty"`
	CurrencyValue             float32              `protobuf:"fixed32,42,opt,name=CurrencyValue,proto3" json:"CurrencyValue,omitempty"`
	OrderPrice                float32              `protobuf:"fixed32,43,opt,name=OrderPrice,proto3" json:"OrderPrice,omitempty"`
	ShippingCost              float32              `protobuf:"fixed32,44,opt,name=ShippingCost,proto3" json:"ShippingCost,omitempty"`
	ShippingMethod            string               `protobuf:"bytes,45,opt,name=ShippingMethod,proto3" json:"ShippingMethod,omitempty"`
	ShippingDuration          *timestamp.Timestamp `protobuf:"bytes,46,opt,name=ShippingDuration,proto3" json:"ShippingDuration,omitempty"`
	OrderInformation          string               `protobuf:"bytes,47,opt,name=OrderInformation,proto3" json:"OrderInformation,omitempty"`
	IsSeen                    bool                 `protobuf:"varint,48,opt,name=IsSeen,proto3" json:"IsSeen,omitempty"`
	CouponCode                string               `protobuf:"bytes,49,opt,name=CouponCode,proto3" json:"CouponCode,omitempty"`
	CouponAmount              float32              `protobuf:"fixed32,50,opt,name=CouponAmount,proto3" json:"CouponAmount,omitempty"`
	ExcludePoductIDs          uint64               `protobuf:"varint,51,opt,name=ExcludePoductIDs,proto3" json:"ExcludePoductIDs,omitempty"`
	ProductCategories         string               `protobuf:"bytes,52,opt,name=ProductCategories,proto3" json:"ProductCategories,omitempty"`
	ExcludedProductCategories string               `protobuf:"bytes,53,opt,name=ExcludedProductCategories,proto3" json:"ExcludedProductCategories,omitempty"`
	FreeShipping              bool                 `protobuf:"varint,54,opt,name=FreeShipping,proto3" json:"FreeShipping,omitempty"`
	ProductIDS                uint64               `protobuf:"varint,55,opt,name=ProductIDS,proto3" json:"ProductIDS,omitempty"`
	OrderedSource             string               `protobuf:"bytes,56,opt,name=OrderedSource,proto3" json:"OrderedSource,omitempty"`
	DeliveryPhone             string               `protobuf:"bytes,57,opt,name=DeliveryPhone,proto3" json:"DeliveryPhone,omitempty"`
	BillingPhone              string               `protobuf:"bytes,58,opt,name=BillingPhone,proto3" json:"BillingPhone,omitempty"`
	TransactionID             string               `protobuf:"bytes,59,opt,name=TransactionID,proto3" json:"TransactionID,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_orders_fe63c5900a7db203, []int{0}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrdersID() uint64 {
	if m != nil {
		return m.OrdersID
	}
	return 0
}

func (m *Order) GetTotalTax() int64 {
	if m != nil {
		return m.TotalTax
	}
	return 0
}

func (m *Order) GetCustomersID() uint64 {
	if m != nil {
		return m.CustomersID
	}
	return 0
}

func (m *Order) GetCustomersName() string {
	if m != nil {
		return m.CustomersName
	}
	return ""
}

func (m *Order) GetCustomersCompany() string {
	if m != nil {
		return m.CustomersCompany
	}
	return ""
}

func (m *Order) GetCustomersStreetAddress() string {
	if m != nil {
		return m.CustomersStreetAddress
	}
	return ""
}

func (m *Order) GetCustomersSuburb() string {
	if m != nil {
		return m.CustomersSuburb
	}
	return ""
}

func (m *Order) GetCustomersCity() string {
	if m != nil {
		return m.CustomersCity
	}
	return ""
}

func (m *Order) GetCustomersPostCode() string {
	if m != nil {
		return m.CustomersPostCode
	}
	return ""
}

func (m *Order) GetCustomersState() string {
	if m != nil {
		return m.CustomersState
	}
	return ""
}

func (m *Order) GetCustomersCountry() string {
	if m != nil {
		return m.CustomersCountry
	}
	return ""
}

func (m *Order) GetCustomersTelephone() string {
	if m != nil {
		return m.CustomersTelephone
	}
	return ""
}

func (m *Order) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Order) GetCustomersAddressFormatID() string {
	if m != nil {
		return m.CustomersAddressFormatID
	}
	return ""
}

func (m *Order) GetDeliveryName() string {
	if m != nil {
		return m.DeliveryName
	}
	return ""
}

func (m *Order) GetDeliveryCompany() string {
	if m != nil {
		return m.DeliveryCompany
	}
	return ""
}

func (m *Order) GetDeliveryStreetAddress() string {
	if m != nil {
		return m.DeliveryStreetAddress
	}
	return ""
}

func (m *Order) GetDeliverySuburb() string {
	if m != nil {
		return m.DeliverySuburb
	}
	return ""
}

func (m *Order) GetDeliveryCity() string {
	if m != nil {
		return m.DeliveryCity
	}
	return ""
}

func (m *Order) GetDeliveryPostcode() string {
	if m != nil {
		return m.DeliveryPostcode
	}
	return ""
}

func (m *Order) GetDeliveryState() string {
	if m != nil {
		return m.DeliveryState
	}
	return ""
}

func (m *Order) GetDeliveryCountry() string {
	if m != nil {
		return m.DeliveryCountry
	}
	return ""
}

func (m *Order) GetDeliveryAddressFormatID() uint64 {
	if m != nil {
		return m.DeliveryAddressFormatID
	}
	return 0
}

func (m *Order) GetBillingName() string {
	if m != nil {
		return m.BillingName
	}
	return ""
}

func (m *Order) GetBillingCompany() string {
	if m != nil {
		return m.BillingCompany
	}
	return ""
}

func (m *Order) GetBillingStreetAddress() string {
	if m != nil {
		return m.BillingStreetAddress
	}
	return ""
}

func (m *Order) GetBillingSuburb() string {
	if m != nil {
		return m.BillingSuburb
	}
	return ""
}

func (m *Order) GetBillingCity() string {
	if m != nil {
		return m.BillingCity
	}
	return ""
}

func (m *Order) GetBillingPostCode() string {
	if m != nil {
		return m.BillingPostCode
	}
	return ""
}

func (m *Order) GetBillingState() string {
	if m != nil {
		return m.BillingState
	}
	return ""
}

func (m *Order) GetBillingCountry() string {
	if m != nil {
		return m.BillingCountry
	}
	return ""
}

func (m *Order) GetBillingAddresFormatID() uint64 {
	if m != nil {
		return m.BillingAddresFormatID
	}
	return 0
}

func (m *Order) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *Order) GetCcType() string {
	if m != nil {
		return m.CcType
	}
	return ""
}

func (m *Order) GetCcOwner() string {
	if m != nil {
		return m.CcOwner
	}
	return ""
}

func (m *Order) GetCcNumber() string {
	if m != nil {
		return m.CcNumber
	}
	return ""
}

func (m *Order) GetCcExpires() string {
	if m != nil {
		return m.CcExpires
	}
	return ""
}

func (m *Order) GetLastModified() *timestamp.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *Order) GetDatePurchased() *timestamp.Timestamp {
	if m != nil {
		return m.DatePurchased
	}
	return nil
}

func (m *Order) GetOrdersDateFinished() *timestamp.Timestamp {
	if m != nil {
		return m.OrdersDateFinished
	}
	return nil
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetCurrencyValue() float32 {
	if m != nil {
		return m.CurrencyValue
	}
	return 0
}

func (m *Order) GetOrderPrice() float32 {
	if m != nil {
		return m.OrderPrice
	}
	return 0
}

func (m *Order) GetShippingCost() float32 {
	if m != nil {
		return m.ShippingCost
	}
	return 0
}

func (m *Order) GetShippingMethod() string {
	if m != nil {
		return m.ShippingMethod
	}
	return ""
}

func (m *Order) GetShippingDuration() *timestamp.Timestamp {
	if m != nil {
		return m.ShippingDuration
	}
	return nil
}

func (m *Order) GetOrderInformation() string {
	if m != nil {
		return m.OrderInformation
	}
	return ""
}

func (m *Order) GetIsSeen() bool {
	if m != nil {
		return m.IsSeen
	}
	return false
}

func (m *Order) GetCouponCode() string {
	if m != nil {
		return m.CouponCode
	}
	return ""
}

func (m *Order) GetCouponAmount() float32 {
	if m != nil {
		return m.CouponAmount
	}
	return 0
}

func (m *Order) GetExcludePoductIDs() uint64 {
	if m != nil {
		return m.ExcludePoductIDs
	}
	return 0
}

func (m *Order) GetProductCategories() string {
	if m != nil {
		return m.ProductCategories
	}
	return ""
}

func (m *Order) GetExcludedProductCategories() string {
	if m != nil {
		return m.ExcludedProductCategories
	}
	return ""
}

func (m *Order) GetFreeShipping() bool {
	if m != nil {
		return m.FreeShipping
	}
	return false
}

func (m *Order) GetProductIDS() uint64 {
	if m != nil {
		return m.ProductIDS
	}
	return 0
}

func (m *Order) GetOrderedSource() string {
	if m != nil {
		return m.OrderedSource
	}
	return ""
}

func (m *Order) GetDeliveryPhone() string {
	if m != nil {
		return m.DeliveryPhone
	}
	return ""
}

func (m *Order) GetBillingPhone() string {
	if m != nil {
		return m.BillingPhone
	}
	return ""
}

func (m *Order) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

type CreateOrderRequest struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderRequest) Reset()         { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()    {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_orders_fe63c5900a7db203, []int{1}
}
func (m *CreateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderRequest.Unmarshal(m, b)
}
func (m *CreateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderRequest.Marshal(b, m, deterministic)
}
func (dst *CreateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderRequest.Merge(dst, src)
}
func (m *CreateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrderRequest.Size(m)
}
func (m *CreateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderRequest proto.InternalMessageInfo

func (m *CreateOrderRequest) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type CreateOrderReply struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderReply) Reset()         { *m = CreateOrderReply{} }
func (m *CreateOrderReply) String() string { return proto.CompactTextString(m) }
func (*CreateOrderReply) ProtoMessage()    {}
func (*CreateOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_orders_fe63c5900a7db203, []int{2}
}
func (m *CreateOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderReply.Unmarshal(m, b)
}
func (m *CreateOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderReply.Marshal(b, m, deterministic)
}
func (dst *CreateOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderReply.Merge(dst, src)
}
func (m *CreateOrderReply) XXX_Size() int {
	return xxx_messageInfo_CreateOrderReply.Size(m)
}
func (m *CreateOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderReply proto.InternalMessageInfo

func (m *CreateOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *CreateOrderReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*CreateOrderRequest)(nil), "pb.CreateOrderRequest")
	proto.RegisterType((*CreateOrderReply)(nil), "pb.CreateOrderReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrdersClient is the client API for Orders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersClient interface {
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error)
}

type ordersClient struct {
	cc *grpc.ClientConn
}

func NewOrdersClient(cc *grpc.ClientConn) OrdersClient {
	return &ordersClient{cc}
}

func (c *ordersClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error) {
	out := new(CreateOrderReply)
	err := c.cc.Invoke(ctx, "/pb.Orders/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServer is the server API for Orders service.
type OrdersServer interface {
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderReply, error)
}

func RegisterOrdersServer(s *grpc.Server, srv OrdersServer) {
	s.RegisterService(&_Orders_serviceDesc, srv)
}

func _Orders_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Orders/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Orders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Orders",
	HandlerType: (*OrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _Orders_CreateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders.proto",
}

func init() { proto.RegisterFile("orders.proto", fileDescriptor_orders_fe63c5900a7db203) }

var fileDescriptor_orders_fe63c5900a7db203 = []byte{
	// 1012 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x96, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0xc7, 0xe1, 0xb4, 0x49, 0x63, 0x3a, 0x69, 0x5c, 0x36, 0x49, 0x59, 0xaf, 0x6b, 0x3c, 0x2f,
	0xeb, 0xbc, 0xac, 0x73, 0x36, 0x37, 0xed, 0xba, 0x76, 0x18, 0xd6, 0xc9, 0x09, 0xe0, 0x61, 0x69,
	0x0d, 0xdb, 0xd8, 0x7b, 0x59, 0xba, 0xd8, 0x02, 0x24, 0x51, 0x23, 0xa9, 0x2d, 0xfe, 0x04, 0xfb,
	0xda, 0x05, 0x8f, 0x92, 0x22, 0xca, 0x0e, 0xf2, 0x4e, 0xf7, 0xbb, 0x3b, 0xe2, 0xee, 0x7f, 0x7c,
	0x10, 0xd9, 0xe1, 0xc2, 0x07, 0x21, 0x7b, 0x89, 0xe0, 0x8a, 0xd3, 0x8d, 0x64, 0xd6, 0x3a, 0x9a,
	0x73, 0x3e, 0x0f, 0xe1, 0x14, 0xc9, 0x2c, 0xbd, 0x3a, 0x55, 0x41, 0x04, 0x52, 0xb9, 0x51, 0x62,
	0x82, 0x3a, 0xff, 0x3f, 0x26, 0x9b, 0x9f, 0x74, 0x16, 0x6d, 0x91, 0x6d, 0xfc, 0x90, 0xc3, 0x01,
	0xab, 0xb5, 0x6b, 0xdd, 0xfb, 0xe3, 0xc2, 0xd6, 0xbe, 0x29, 0x57, 0x6e, 0x38, 0x75, 0xaf, 0xd9,
	0x46, 0xbb, 0xd6, 0xbd, 0x37, 0x2e, 0x6c, 0xda, 0x26, 0x0d, 0x27, 0x95, 0x8a, 0x47, 0x26, 0xf5,
	0x1e, 0xa6, 0x96, 0x11, 0x3d, 0x26, 0xbb, 0x85, 0xf9, 0xd1, 0x8d, 0x80, 0xdd, 0x6f, 0xd7, 0xba,
	0xf5, 0xb1, 0x0d, 0xe9, 0x09, 0x69, 0x16, 0xc0, 0xe1, 0x51, 0xe2, 0xc6, 0x4b, 0xb6, 0x89, 0x81,
	0x2b, 0x9c, 0xbe, 0x21, 0x87, 0x05, 0x9b, 0x28, 0x01, 0xa0, 0x3e, 0xf8, 0xbe, 0x00, 0x29, 0xd9,
	0x16, 0x66, 0xdc, 0xe2, 0xa5, 0x5d, 0xb2, 0x77, 0xe3, 0x49, 0x67, 0xa9, 0x98, 0xb1, 0x07, 0x98,
	0x50, 0xc5, 0x56, 0xcd, 0x4e, 0xa0, 0x96, 0x6c, 0xbb, 0x52, 0xb3, 0x86, 0xf4, 0x25, 0x79, 0x54,
	0x80, 0x11, 0x97, 0xca, 0xe1, 0x3e, 0xb0, 0x3a, 0x46, 0xae, 0x3a, 0xe8, 0x0b, 0xf2, 0xb0, 0x54,
	0x97, 0xab, 0x80, 0x11, 0x0c, 0xad, 0xd0, 0x8a, 0x12, 0x69, 0xac, 0xc4, 0x92, 0x35, 0x56, 0x94,
	0x40, 0x4e, 0x7b, 0x84, 0x16, 0x6c, 0x0a, 0x21, 0x24, 0x0b, 0x1e, 0x03, 0xdb, 0xc1, 0xe8, 0x35,
	0x1e, 0xba, 0x4f, 0x36, 0xcf, 0x23, 0x37, 0x08, 0xd9, 0x2e, 0x86, 0x18, 0x83, 0xbe, 0x23, 0xac,
	0x88, 0xcd, 0xb4, 0xba, 0xe0, 0x22, 0x72, 0xd5, 0x70, 0xc0, 0x1e, 0x62, 0xe0, 0xad, 0x7e, 0xda,
	0x21, 0x3b, 0x03, 0x08, 0x83, 0x7f, 0x41, 0x2c, 0x71, 0xb8, 0x7b, 0x18, 0x6f, 0x31, 0xad, 0x7b,
	0x6e, 0xe7, 0xa3, 0x6d, 0x1a, 0xdd, 0x2b, 0x98, 0x9e, 0x91, 0x83, 0x1c, 0xd9, 0x83, 0x7d, 0x84,
	0xf1, 0xeb, 0x9d, 0x5a, 0xd9, 0xc2, 0x61, 0xc6, 0x4a, 0x8d, 0xb2, 0x36, 0x2d, 0xd7, 0x8a, 0x43,
	0x7d, 0x6c, 0xd7, 0x8a, 0x33, 0x3d, 0x21, 0xcd, 0xdc, 0xd6, 0x93, 0xf3, 0xf4, 0x48, 0xf7, 0x8d,
	0xfa, 0x55, 0xae, 0x77, 0xc9, 0x4d, 0x41, 0x7a, 0xa0, 0x07, 0x66, 0x97, 0x58, 0xd0, 0xee, 0xde,
	0x8c, 0xf3, 0xb0, 0xda, 0xbd, 0x99, 0xe6, 0x5b, 0xf2, 0x24, 0x47, 0xd5, 0x31, 0x3c, 0xc1, 0x73,
	0x75, 0x9b, 0x5b, 0x9f, 0xc2, 0x3f, 0x82, 0x30, 0x0c, 0xe2, 0x39, 0x0e, 0x81, 0xe1, 0xfa, 0x65,
	0xa4, 0x35, 0xca, 0xcc, 0x7c, 0x04, 0x4f, 0x8d, 0x46, 0x36, 0xa5, 0x7d, 0xb2, 0x9f, 0x11, 0x7b,
	0x00, 0x2d, 0x8c, 0x5e, 0xeb, 0xd3, 0x3a, 0xe4, 0xdc, 0xc8, 0xff, 0x85, 0xd1, 0xc1, 0x82, 0xa5,
	0x1a, 0x51, 0xfc, 0x67, 0x56, 0x8d, 0xa8, 0x7d, 0x97, 0xec, 0x65, 0x66, 0x71, 0x9a, 0xbe, 0x34,
	0x4a, 0x55, 0xb0, 0x9e, 0x64, 0x51, 0x89, 0x16, 0xfe, 0xb9, 0x99, 0x64, 0x99, 0x59, 0x1d, 0x1b,
	0xd9, 0x8f, 0x2a, 0x1d, 0x1b, 0xd5, 0xcf, 0xc8, 0x41, 0x46, 0x4c, 0x3f, 0x85, 0xe6, 0x6d, 0xd4,
	0x7c, 0xbd, 0x53, 0xf7, 0x3c, 0x72, 0x97, 0x11, 0xc4, 0xea, 0x12, 0xd4, 0x82, 0xfb, 0xec, 0x2b,
	0xd3, 0xb3, 0x05, 0xe9, 0x21, 0xd9, 0x72, 0xbc, 0xe9, 0x32, 0x01, 0xd6, 0x41, 0x77, 0x66, 0x51,
	0x46, 0x1e, 0x38, 0xde, 0xa7, 0xff, 0x62, 0x10, 0xec, 0x6b, 0x74, 0xe4, 0xa6, 0xbe, 0x6b, 0x1d,
	0xef, 0x63, 0x1a, 0xcd, 0x40, 0xb0, 0x63, 0x74, 0x15, 0x36, 0x7d, 0x46, 0xea, 0x8e, 0x77, 0x7e,
	0x9d, 0x04, 0x02, 0x24, 0xfb, 0x06, 0x9d, 0x37, 0x80, 0xfe, 0x46, 0x76, 0xfe, 0x72, 0xa5, 0xba,
	0xe4, 0x7e, 0x70, 0x15, 0x80, 0xcf, 0x5e, 0xb4, 0x6b, 0xdd, 0x46, 0xbf, 0xd5, 0x33, 0x6f, 0x40,
	0x2f, 0x7f, 0x03, 0x7a, 0xd3, 0xfc, 0x0d, 0x18, 0x5b, 0xf1, 0xf4, 0x77, 0xb2, 0x3b, 0x70, 0x15,
	0x8c, 0x52, 0xe1, 0x2d, 0x5c, 0x09, 0x3e, 0xfb, 0xf6, 0xce, 0x05, 0xec, 0x04, 0xfa, 0x27, 0xa1,
	0xe6, 0xcd, 0xd0, 0xf8, 0x22, 0x88, 0x03, 0xb9, 0x00, 0x9f, 0x75, 0xef, 0x5c, 0x66, 0x4d, 0x16,
	0xea, 0x90, 0x0a, 0x01, 0xb1, 0xb7, 0x64, 0xdf, 0x65, 0x3a, 0x64, 0xb6, 0xb9, 0x9d, 0xcd, 0xf7,
	0xdf, 0x6e, 0x98, 0x02, 0x3b, 0x69, 0xd7, 0xba, 0x1b, 0x63, 0x1b, 0xd2, 0xe7, 0x84, 0xe0, 0xba,
	0x23, 0x11, 0x78, 0xc0, 0xbe, 0xc7, 0x90, 0x12, 0xd1, 0x7b, 0x68, 0xb2, 0x08, 0x92, 0x04, 0xb7,
	0x82, 0x54, 0xec, 0x25, 0x46, 0x58, 0x4c, 0xef, 0xa1, 0xdc, 0xce, 0xc6, 0xfc, 0x83, 0xd9, 0x43,
	0x36, 0xa5, 0x17, 0xa4, 0x99, 0x93, 0x41, 0x2a, 0x5c, 0x15, 0xf0, 0x98, 0xf5, 0xee, 0xec, 0x7b,
	0x25, 0x47, 0xdf, 0x3e, 0x58, 0xe1, 0x30, 0xbe, 0xc2, 0x8d, 0xa6, 0xd7, 0x39, 0x35, 0xb7, 0x4f,
	0x95, 0xeb, 0xbd, 0x35, 0x94, 0x13, 0x80, 0x98, 0xfd, 0xd8, 0xae, 0x75, 0xb7, 0xc7, 0x99, 0xa5,
	0xfb, 0x76, 0x78, 0x9a, 0xf0, 0x18, 0x0f, 0xd0, 0x4f, 0x98, 0x5d, 0x22, 0xba, 0x6f, 0x63, 0x7d,
	0x88, 0xf4, 0x09, 0x60, 0x7d, 0xd3, 0x77, 0x99, 0xe9, 0x3a, 0xce, 0xaf, 0xbd, 0x30, 0xf5, 0x61,
	0xc4, 0xfd, 0xd4, 0x53, 0xc3, 0x81, 0x64, 0xaf, 0xf0, 0x38, 0xac, 0x70, 0xfd, 0x0a, 0x8e, 0x04,
	0x5a, 0x8e, 0xab, 0x60, 0xce, 0x45, 0x00, 0x92, 0x9d, 0x99, 0x57, 0x70, 0xc5, 0x41, 0x7f, 0x25,
	0x4f, 0xb3, 0x15, 0xfc, 0xd5, 0xac, 0xd7, 0x98, 0x75, 0x7b, 0x80, 0xae, 0xfd, 0x42, 0x00, 0xe4,
	0xba, 0xb1, 0x37, 0xd8, 0xb9, 0xc5, 0x74, 0xff, 0x59, 0xe2, 0x70, 0x30, 0x61, 0x3f, 0x63, 0xd5,
	0x25, 0xa2, 0x77, 0x0f, 0x6a, 0x09, 0xfe, 0x84, 0xa7, 0xc2, 0x03, 0xf6, 0xd6, 0x9c, 0x5c, 0x0b,
	0x96, 0xef, 0xf6, 0x11, 0x3e, 0xaa, 0xbf, 0xd8, 0x77, 0x3b, 0xc2, 0xd2, 0x3d, 0x64, 0x82, 0xde,
	0x59, 0xf7, 0x90, 0x89, 0x39, 0x26, 0xbb, 0x53, 0xe1, 0xc6, 0xd2, 0xf5, 0xf4, 0xd8, 0x86, 0x03,
	0xf6, 0xde, 0xac, 0x64, 0xc1, 0xce, 0x6b, 0x42, 0x1d, 0x01, 0xae, 0x02, 0x2c, 0x63, 0x0c, 0xff,
	0xa4, 0x20, 0x15, 0x3d, 0x22, 0x9b, 0xf8, 0x53, 0x87, 0xbf, 0x64, 0x8d, 0x7e, 0xbd, 0x97, 0xcc,
	0x7a, 0x26, 0xc0, 0xf0, 0xce, 0x25, 0x69, 0x5a, 0x69, 0x49, 0xb8, 0xbc, 0x33, 0x49, 0xdf, 0x3e,
	0x11, 0x48, 0xe9, 0xce, 0x01, 0x7f, 0xe7, 0xea, 0xe3, 0xdc, 0xec, 0x9f, 0x93, 0x2d, 0x73, 0x16,
	0xe9, 0x7b, 0xd2, 0x28, 0x2d, 0x4c, 0x0f, 0xf5, 0x22, 0xab, 0x05, 0xb6, 0xf6, 0x57, 0x78, 0x12,
	0x2e, 0x67, 0x5b, 0xb8, 0xd9, 0x5f, 0x7d, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x13, 0xa9, 0x7d, 0xeb,
	0x92, 0x0a, 0x00, 0x00,
}
